# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "centos/7"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"
  #config.vm.network "forwarded_port", guest: 80, host: 8082   # http jenkins
  #config.vm.network "forwarded_port", guest: 8080, host: 8080   # http jenkins
  #config.vm.network "forwarded_port", guest: 8081, host: 8081   # http nexus
  #config.vm.network "forwarded_port", guest: 50000, host: 50000   # for jenkins

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.gui = true

     # Customize the amount of memory on the VM:
     vb.memory = "2048"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  config.vm.provision "shell", inline: <<-SHELL
  	grubby --update-kernel=ALL --args=net.ifnames=0
	grubby --update-kernel=ALL --args=biosdevname=0

    useradd csuser
    echo summit2017! | passwd csuser --stdin

    sudo yum -y groupinstall "GNOME Desktop"
    sudo yum -y remove libreoffice*

    sudo yum -y install git

    wget https://github.com/openshift/origin/releases/download/v1.5.0/openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit.tar.gz
    tar -zxvf openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit.tar.gz
    cd openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit
    sudo mv oc /usr/bin/
    cd ..
    rm -r openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit

    sudo yum -y remove java-1.7.0-openjdk*
    sudo yum -y install java-1.8.0-openjdk-devel
    sudo rm /etc/profile.d/java.sh
    touch /etc/profile.d/java.sh
    cp /vagrant/java.sh /etc/profile.d/java.sh

    sudo curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -
    sudo yum -y install nodejs

    cd /home/csuser
    sudo rm /opt/maven
    wget http://apache.panu.it/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz
    tar xzf apache-maven-3.5.0-bin.tar.gz
    rm apache-maven-3.5.0-bin.tar.gz
    sudo ln -s /home/csuser/apache-maven-3.5.0 /opt/maven
    sudo rm /etc/profile.d/maven.sh
    touch /etc/profile.d/maven.sh
    cp /vagrant/maven.sh /etc/profile.d/maven.sh

    sudo yum -y install https://github.com/atom/atom/releases/download/v1.16.0/atom.x86_64.rpm

    sudo systemctl set-default graphical.target
    sudo systemctl start graphical.target

    sudo VBoxClient --clipboard
    sudo VBoxClient --draganddrop
    sudo VBoxClient --display
    sudo VBoxClient --checkhostversion
    sudo VBoxClient --seamless

    cd /home/csuser
    rm -r hsql_stuff
    rm -r additional_elements
    rm -r workspace
    rm -r eclipse_install

    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/eclipse_install.tar.gz
    tar -zxvf eclipse_install.tar.gz
    rm eclipse_install.tar.gz

    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/workspacev3.tar.gz
    tar -zxvf workspacev3.tar.gz
    rm workspacev3.tar.gz

    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/additional_elements.tar.gz
    tar -zxvf additional_elements.tar.gz
    rm additional_elements.tar.gz

    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/hsql.tar.gz
    tar -zxvf hsql.tar.gz
    rm hsql.tar.gz

    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/hsql_stuff.tar.gz
    tar -zxvf hsql_stuff.tar.gz
    rm hsql_stuff.tar.gz

    sudo chown csuser -R vagrant
    sudo chown csuser -R hsqldb.jar

    mv vagrant/hsql_stuff/* .
    mv vagrant/additional_elements/* .
    mv vagrant/eclipse_install/* .

    rm -r vagrant

    rm /home/csuser/workspace/codestarter_complete/kura/snapshots/snapshot_*
    cp /vagrant/snapshot_1493321519746.xml /home/csuser/workspace/codestarter_complete/kura/snapshots
    sudo chown csuser -R /home/csuser/workspace/codestarter_complete/kura/snapshots/snapshot_1493321519746.xml
    rm /home/csuser/workspace/codestarter/kura/snapshots/snapshot_1*

    mkdir -p /home/csuser/Desktop
    sudo chown csuser -R /home/csuser/Desktop
    mv *.desktop /home/csuser/Desktop

    cd /home/csuser/Desktop
    wget https://s3-us-west-2.amazonaws.com/kura-repo/RedHatSummit/vm-contents/DesktopLaunchers.tar.gz
    tar -zxvf DesktopLaunchers.tar.gz
    rm DesktopLaunchers.tar.gz
  SHELL
end
